document.addEventListener("DOMContentLoaded", function () {
  function updateSummary() {
    const iataFrom = document.getElementById("cc_sb3_sb3_flighthotel_sb3_flighthotel_iataFrom"),
      city = document.getElementById("cc_sb3_sb3_flighthotel_sb3_flighthotel_city"),
      outboundDate = document.getElementById("cc_sb3_sb3_flighthotel_sb3_flighthotel_outboundDate"),
      returnDate = document.getElementById("cc_sb3_sb3_flighthotel_sb3_hotel_numNights"),
      airline = document.getElementById("cc_sb3_sb3_flighthotel_sb3_flight_airlines_0"),
      classOfService = document.getElementById("cc_sb3_sb3_flighthotel_sb3_flight_classofservice"),
      numRooms = document.getElementById("cc_sb3_sb3_flighthotel_sb3_flighthotel_numRooms"),
      numGuests1 = document.getElementById("cc_sb3_sb3_flighthotel_flighthotel_numGuests1"),
      numGuests2 = document.getElementById("cc_sb3_sb3_flighthotel_flighthotel_numGuests2"),
      numGuests3 = document.getElementById("cc_sb3_sb3_flighthotel_flighthotel_numGuests3");

    const from = iataFrom?.value || "",
      destination = city?.value || "",
      dep = outboundDate?.value || "",
      ret = returnDate?.value || "",
      air = airline?.value || "Any Airline",
      cls = classOfService?.value || "E",
      rooms = parseInt(numRooms?.value || 1),
      guests1 = numGuests1?.value || "0",
      guests2 = numGuests2?.value || "0",
      guests3 = numGuests3?.value || "0";

    // Build summary dynamically based on room count
    let guestSummary = `Room 1: ${guests1} guest${guests1 > 1 ? "s" : ""}`;
    if (rooms >= 2)
      guestSummary += `, Room 2: ${guests2} guest${guests2 > 1 ? "s" : ""}`;
    if (rooms === 3)
      guestSummary += `, Room 3: ${guests3} guest${guests3 > 1 ? "s" : ""}`;

    const summaryText = `${from} → ${destination} | ${dep} → ${ret} | ${air} | Class: ${cls} | ${rooms} Room${rooms > 1 ? "s" : ""} | ${guestSummary}`;

    const summaryBox = document.getElementById("summary");
    if (summaryBox) summaryBox.value = summaryText;
  }

  // Helper: safely attach onchange attributes
  function setOnChange(id, handler) {
    const el = document.getElementById(id);
    if (el) el.setAttribute("onchange", handler);
  }

  // Attach summary listeners
  setOnChange("cc_sb3_sb3_flighthotel_sb3_flight_airlines_0", "updateSummary()");
  setOnChange("cc_sb3_sb3_flighthotel_sb3_flight_classofservice", "updateSummary()");

  // Dynamically reattach guest dropdown listeners based on visible rooms
  const numRoomsEl = document.getElementById("cc_sb3_sb3_flighthotel_sb3_flighthotel_numRooms");
  if (numRoomsEl) {
    numRoomsEl.addEventListener("change", () => {
      attachRoomListeners();
      updateSummary();
    });
  }

  function attachRoomListeners() {
    const roomMap = {
      1: "cc_sb3_sb3_flighthotel_flighthotel_numGuests1",
      2: "cc_sb3_sb3_flighthotel_flighthotel_numGuests2",
      3: "cc_sb3_sb3_flighthotel_flighthotel_numGuests3"
    };

    Object.entries(roomMap).forEach(([roomNum, id]) => {
      const el = document.getElementById(id);
      if (el && el.offsetParent !== null) {
        el.onchange = function () {
          updateAges(Number(roomNum));
          updateSummary();
        };
      }
    });
  }

  attachRoomListeners();

  // Update summary in real-time for all inputs and selects
  document.querySelectorAll("input, select").forEach((el) => {
    el.addEventListener("input", updateSummary);
    el.addEventListener("change", updateSummary);
  });

  document.addEventListener("click", (e) => {
    if (e.target.classList.contains("suggestion-item")) {
      setTimeout(updateSummary, 100);
    }
  });

  updateSummary();
});

