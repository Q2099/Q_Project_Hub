document.addEventListener("DOMContentLoaded", function () {
  const iataFrom = document.getElementById("cc_sb3_sb3_flighthotel_sb3_flighthotel_iataFrom"),
    city = document.getElementById("cc_sb3_sb3_flighthotel_sb3_flighthotel_city"),
    outboundDate = document.getElementById("cc_sb3_sb3_flighthotel_sb3_flighthotel_outboundDate"),
    returnDate = document.getElementById("cc_sb3_sb3_flighthotel_sb3_hotel_numNights"),
    airline = document.getElementById("cc_sb3_sb3_flighthotel_sb3_flight_airlines_0"),
    classOfService = document.getElementById("cc_sb3_sb3_flighthotel_sb3_flight_classofservice"),
    numRooms = document.getElementById("cc_sb3_sb3_flighthotel_sb3_flighthotel_numRooms"),
    numGuests1 = document.getElementById("cc_sb3_sb3_flighthotel_flighthotel_numGuests1"),
    numGuests2 = document.getElementById("cc_sb3_sb3_flighthotel_flighthotel_numGuests2"),
    numGuests3 = document.getElementById("cc_sb3_sb3_flighthotel_flighthotel_numGuests3"),
    summaryBox = document.getElementById("summary");

  // ⭐ Star ratings
  const starRatings = document.querySelectorAll(".star_rating_copy input[type='checkbox']");

  // ✈️ Advanced options
  const directFlights = document.getElementById("cc_sb3_sb3_flighthotel_sb3_flighthotel_directflights_copy");
  const bagOnlyFares = document.getElementById("cc_sb3_sb3_flighthotel_bagOnly_fares");

  // 🍽️ Board basis checkboxes
  const boardBasis = document.querySelectorAll(".boardBasis input[type='checkbox']");

  // Class of service presets
  const classNames = { E: "Economy", P: "Premium Economy", B: "Business", F: "First" };

  // Board basis full names
  const boardNames = {
    RO: "Room Only",
    SC: "Self Catering",
    BB: "Bed & Breakfast",
    HB: "Half Board",
    FB: "Full Board",
    AI: "All Inclusive",
  };

  // 🍽️ Summarize Board Basis (still uses Multiple/All)
  function summarizeBoardBasis() {
    const selected = Array.from(boardBasis).filter((cb) => cb.checked);
    const count = selected.length;
    const total = boardBasis.length;

    if (count === 0) return "Any";
    if (count === total) return "All";
    if (count >= 3) return "Multiple";

    return selected.map((cb) => boardNames[cb.value] || cb.value).join(", ");
  }

  // ⭐ Summarize Star Ratings (no Multiple/All — lists exact stars)
  function summarizeStars() {
    const selected = Array.from(starRatings).filter((cb) => cb.checked);
    if (selected.length === 0) return "Any";
    return selected.map((cb) => cb.value).join(", ") + "★";
  }

  // 🧾 Main Summary Update
  function updateSummary() {
    const fromVal = iataFrom?.value || "—";
    const cityVal = city?.value || "—";
    const outVal = outboundDate?.value || "—";
    const retVal = returnDate?.value || "—";
    const airlineVal = airline?.value || "Any Airline";
    const classVal = classOfService?.value;
    const className = classNames[classVal] || classVal || "Economy";
    const rooms = numRooms?.value || "1";
    const guests1 = numGuests1?.value || "0";
    const guests2 = numGuests2?.value || "0";
    const guests3 = numGuests3?.value || "0";

    // ⭐ Star rating summary
    const starSummary = summarizeStars();

    // 🍽️ Board basis summary
    const boardSummary = summarizeBoardBasis();

    // ✈️ Advanced options
    const directText = directFlights?.checked ? "Direct Flights Only" : "";
    const bagText = bagOnlyFares?.checked ? "Hand Luggage Only" : "";

 let guestSummary = `Room 1: ${guests1} Guests`;
    if (rooms >= 2) guestSummary += `, Room 2: ${guests2} Guests`;
    if (rooms >= 3) guestSummary += `, Room 3: ${guests3} Guests`;

    //let summary = `${fromVal} → ${cityVal} | ${outVal} → ${retVal} | ${airlineVal} | Class: ${className} | Stars: ${starSummary} | Board: ${boardSummary} | Rooms: ${rooms} | Guests: ${guestSummary}`;
    let summary = `Class: ${className} | Stars: ${starSummary} | Board: ${boardSummary} | Rooms: ${rooms} | Guests: ${guestSummary}`;

    // Add advanced filters if selected
    const extras = [directText, bagText].filter(Boolean).join(" | ");
    if (extras) summary += ` | ${extras}`;

    if (summaryBox) summaryBox.value = summary;
  }
//line break for summary box
  if (summaryBox) {
  summaryBox.value = summary;
  summaryBox.style.height = "auto";
  summaryBox.style.height = summaryBox.scrollHeight + "px";
}

  // Listen to standard fields
  [
    iataFrom, city, outboundDate, returnDate,
    airline, classOfService, numRooms,
    numGuests1, numGuests2, numGuests3,
    directFlights, bagOnlyFares,
  ].forEach((el) => {
    if (el) {
      el.addEventListener("input", updateSummary);
      el.addEventListener("change", updateSummary);
    }
  });

  // Listen to checkbox groups
  [...starRatings, ...boardBasis].forEach((cb) => cb.addEventListener("change", updateSummary));

  // Initialize summary on load
  updateSummary();
});



